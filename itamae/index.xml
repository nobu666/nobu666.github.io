<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Itamae on Real Beat</title>
    <link>http://localhost:1313/tags/itamae.html</link>
    <description>Recent content in Itamae on Real Beat</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <copyright>&amp;copy; nobu666.com</copyright>
    <lastBuildDate>Thu, 10 Dec 2015 10:03:53 +0900</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/itamae.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Itamae meetup #1 ( #itamae_meetup ) で「Itamaeで幸せになった話」をLTしてきた</title>
      <link>http://localhost:1313/2015/12/10/1019.html</link>
      <pubDate>Thu, 10 Dec 2015 10:03:53 +0900</pubDate>
      
      <guid>http://localhost:1313/2015/12/10/1019.html</guid>
      <description>

&lt;h2 id=&#34;itamae-meetup-1:6d5055e16bfca6fb1a3947c2e8ba0343&#34;&gt;Itamae meetup #1&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/itamae-kitchen/itamae&#34;&gt;Itamae&lt;/a&gt; は &lt;a href=&#34;https://twitter.com/ryot_a_rai&#34;&gt;@ryot_a_rai&lt;/a&gt; くんの作ったプロビジョニングツールです。要は軽量版 Chef だと思えば大体あってます。で、めでたく &lt;a href=&#34;http://itamae.connpass.com/event/22857/&#34;&gt;meetup の第一回&lt;/a&gt;が開催されるということで、LT 枠でクックパッド社にお邪魔してきました。&lt;/p&gt;

&lt;h2 id=&#34;話したこと:6d5055e16bfca6fb1a3947c2e8ba0343&#34;&gt;話したこと&lt;/h2&gt;

&lt;p&gt;LT ということでかなり端折った資料になっているため、資料だけ見てもよくわからないかもしれません。資料に書いていないこと、発表で話せなかったことを補足しつつまとめます。&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/cFL8vnMqcowaPr&#34; width=&#34;595&#34; height=&#34;485&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; style=&#34;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&#34;margin-bottom:5px&#34;&gt; &lt;strong&gt; &lt;a href=&#34;//www.slideshare.net/NobutoshiOgata/the-story-became-happy-with-itamae&#34; title=&#34;The story became happy with itamae&#34; target=&#34;_blank&#34;&gt;The story became happy with itamae&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&#34;//www.slideshare.net/NobutoshiOgata&#34; target=&#34;_blank&#34;&gt;Nobutoshi Ogata&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;&lt;/p&gt;

&lt;h3 id=&#34;導入の背景:6d5055e16bfca6fb1a3947c2e8ba0343&#34;&gt;導入の背景&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;以前は Chef が使われていたが、リポジトリが分散し、かつ依存があってカオスであった&lt;/li&gt;
&lt;li&gt;整理するくらいなら作りなおしたほうがはやい&lt;/li&gt;
&lt;li&gt;Chef はやりたいことに大して大げさすぎる&lt;/li&gt;
&lt;li&gt;Ansible は冪等性を維持する書き方がすっきりかけなくてダルい&lt;/li&gt;
&lt;li&gt;Puppet は使いはじめるまでに覚えることが多すぎる&lt;/li&gt;
&lt;li&gt;知り合いが作っている OSS であればいろいろ安心&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;smartnews-における事例:6d5055e16bfca6fb1a3947c2e8ba0343&#34;&gt;SmartNews における事例&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Github に push

&lt;ul&gt;
&lt;li&gt;大きめの修正を入れた時はpacker で AMI を build して、AutoScalingGroup に設定する&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://circleci.com/&#34;&gt;CircleCI&lt;/a&gt; で共通部分のテストしたのち、S3 に zip して upload&lt;/li&gt;
&lt;li&gt;AutoScalingGroup で管理されている EC2 インスタンスが、起動時に zip を download し、自分のタグから role を判定して &lt;code&gt;itamae local&lt;/code&gt; を実行

&lt;ul&gt;
&lt;li&gt;手動で即時反映したければ Fabric を叩く(この時も &lt;code&gt;itamae ssh&lt;/code&gt; はしてなくて、各インスタンスが zip 落としてきて &lt;code&gt;itamae local&lt;/code&gt; です&lt;/li&gt;
&lt;li&gt;あるいは AutoScalingGroup のインスタンスを総入れ替えするコマンドを作ってあるので、そいつを叩く&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;directory-構成:6d5055e16bfca6fb1a3947c2e8ba0343&#34;&gt;Directory 構成&lt;/h3&gt;

&lt;p&gt;基本的に &lt;a href=&#34;https://github.com/itamae-kitchen/itamae/wiki/Best-Practice&#34;&gt;Best Practice&lt;/a&gt; 構成&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.
├── ci
├── cookbooks -&amp;gt; packer/cookbooks
├── fabfile
├── nodes -&amp;gt; packer/nodes
├── packer
│   ├── cookbooks
│   │   ├── admin
│   │   ├── common
│   │   ├── dd_agent
│   │   ├── docker
│   │   ├── pipelinedb
│   │   └── (snip)
│   ├── nodes
│   ├── roles
│   │   ├── auth-proxy
│   │   ├── forward-proxy
│   │   ├── ops-monitor
│   │   └── (snip)
│   ├── scripts
│   └── spec
│       ├── default
│       └── packer
├── roles -&amp;gt; packer/roles
└── spec -&amp;gt; packer/spec
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;nodes はインスタンス個別に yml を設定したいときにつかう想定…だったけど AutoScalingGroup 使い始めたこともあって使っていない&lt;/li&gt;
&lt;li&gt;roles は一つ一つの機能の単位で、 インスタンスにつけている Group というタグと 1:1 で対応し、 AutoScalingGroup もこの role ごとに用意している&lt;/li&gt;

&lt;li&gt;&lt;p&gt;roles の下には default.rb とか production.rb とか staging.rb とかって置くようにしている&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;インスタンスのタグに応じて どっちを使うか決まる&lt;/li&gt;
&lt;li&gt;default はどっちでも使われる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;production.rb&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;node.reverse_merge!({
  java: {
    tomcat: {
      java_opts: {
        xmx: &amp;quot;10240m&amp;quot;,
        xms: &amp;quot;10240m&amp;quot;,
      },
      maxThreads: &amp;quot;512&amp;quot;,
    },
  },
  td_agent: {
    forward: {
      smartnews_action: true
    },
  },
})

include_recipe &amp;quot;default.rb&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;default.rb&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;node.reverse_merge!({
  app_name: &amp;quot;hogehoge&amp;quot;,
  java: {
    tomcat: {
      java_opts: {
        xmx: &amp;quot;7680m&amp;quot;,
        xms: &amp;quot;7680m&amp;quot;,
        metaspace_size: &amp;quot;128m&amp;quot;,
      },
    },
  },
  recipes: %W{
    common
    supervisor
    java
    java::tomcat
    nginx
    td_agent
    dd_agent
    dd_agent::nginx
    dd_agent::supervisor
    dd_agent::jmx
    dd_agent::fluentd
  },
})
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;なんかこんな感じになっていて、 &lt;code&gt;itamae local bootstrap.rb&lt;/code&gt; すると &lt;code&gt;bootstrap.rb&lt;/code&gt; の中で、上述したようなタグに応じて適切に &lt;code&gt;include_recipe&lt;/code&gt; してくれるという構成です&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;まとめ:6d5055e16bfca6fb1a3947c2e8ba0343&#34;&gt;まとめ&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;スモールスタートしやすいツールなので itamae おすすめです&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>