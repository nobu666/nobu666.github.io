<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Real Beat</title>
    <link>http://nobu666.com/</link>
    <description>Recent content on Real Beat</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <copyright>&amp;copy; nobu666.com</copyright>
    <lastBuildDate>Thu, 10 Dec 2015 10:03:53 +0900</lastBuildDate>
    <atom:link href="http://nobu666.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Itamae meetup #1 ( #itamae_meetup ) で「Itamaeで幸せになった話」をLTしてきた</title>
      <link>http://nobu666.com/2015/12/10/1019.html</link>
      <pubDate>Thu, 10 Dec 2015 10:03:53 +0900</pubDate>
      
      <guid>http://nobu666.com/2015/12/10/1019.html</guid>
      <description>

&lt;h2 id=&#34;itamae-meetup-1:6d5055e16bfca6fb1a3947c2e8ba0343&#34;&gt;Itamae meetup #1&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/itamae-kitchen/itamae&#34;&gt;Itamae&lt;/a&gt; は &lt;a href=&#34;https://twitter.com/ryot_a_rai&#34;&gt;@ryot_a_rai&lt;/a&gt; くんの作ったプロビジョニングツールです。要は軽量版 Chef だと思えば大体あってます。で、めでたく &lt;a href=&#34;http://itamae.connpass.com/event/22857/&#34;&gt;meetup の第一回&lt;/a&gt;が開催されるということで、LT 枠でクックパッド社にお邪魔してきました。&lt;/p&gt;

&lt;h2 id=&#34;話したこと:6d5055e16bfca6fb1a3947c2e8ba0343&#34;&gt;話したこと&lt;/h2&gt;

&lt;p&gt;LT ということでかなり端折った資料になっているため、資料だけ見てもよくわからないかもしれません。資料に書いていないこと、発表で話せなかったことを補足しつつまとめます。&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/cFL8vnMqcowaPr&#34; width=&#34;595&#34; height=&#34;485&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; style=&#34;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&#34;margin-bottom:5px&#34;&gt; &lt;strong&gt; &lt;a href=&#34;//www.slideshare.net/NobutoshiOgata/the-story-became-happy-with-itamae&#34; title=&#34;The story became happy with itamae&#34; target=&#34;_blank&#34;&gt;The story became happy with itamae&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&#34;//www.slideshare.net/NobutoshiOgata&#34; target=&#34;_blank&#34;&gt;Nobutoshi Ogata&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;&lt;/p&gt;

&lt;h3 id=&#34;導入の背景:6d5055e16bfca6fb1a3947c2e8ba0343&#34;&gt;導入の背景&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;以前は Chef が使われていたが、リポジトリが分散し、かつ依存があってカオスであった&lt;/li&gt;
&lt;li&gt;整理するくらいなら作りなおしたほうがはやい&lt;/li&gt;
&lt;li&gt;Chef はやりたいことに大して大げさすぎる&lt;/li&gt;
&lt;li&gt;Ansible は冪等性を維持する書き方がすっきりかけなくてダルい&lt;/li&gt;
&lt;li&gt;Puppet は使いはじめるまでに覚えることが多すぎる&lt;/li&gt;
&lt;li&gt;知り合いが作っている OSS であればいろいろ安心&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;smartnews-における事例:6d5055e16bfca6fb1a3947c2e8ba0343&#34;&gt;SmartNews における事例&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Github に push

&lt;ul&gt;
&lt;li&gt;大きめの修正を入れた時はpacker で AMI を build して、AutoScalingGroup に設定する&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://circleci.com/&#34;&gt;CircleCI&lt;/a&gt; で共通部分のテストしたのち、S3 に zip して upload&lt;/li&gt;
&lt;li&gt;AutoScalingGroup で管理されている EC2 インスタンスが、起動時に zip を download し、自分のタグから role を判定して &lt;code&gt;itamae local&lt;/code&gt; を実行

&lt;ul&gt;
&lt;li&gt;手動で即時反映したければ Fabric を叩く(この時も &lt;code&gt;itamae ssh&lt;/code&gt; はしてなくて、各インスタンスが zip 落としてきて &lt;code&gt;itamae local&lt;/code&gt; です&lt;/li&gt;
&lt;li&gt;あるいは AutoScalingGroup のインスタンスを総入れ替えするコマンドを作ってあるので、そいつを叩く&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;directory-構成:6d5055e16bfca6fb1a3947c2e8ba0343&#34;&gt;Directory 構成&lt;/h3&gt;

&lt;p&gt;基本的に &lt;a href=&#34;https://github.com/itamae-kitchen/itamae/wiki/Best-Practice&#34;&gt;Best Practice&lt;/a&gt; 構成&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.
├── ci
├── cookbooks -&amp;gt; packer/cookbooks
├── fabfile
├── nodes -&amp;gt; packer/nodes
├── packer
│   ├── cookbooks
│   │   ├── admin
│   │   ├── common
│   │   ├── dd_agent
│   │   ├── docker
│   │   ├── pipelinedb
│   │   └── (snip)
│   ├── nodes
│   ├── roles
│   │   ├── auth-proxy
│   │   ├── forward-proxy
│   │   ├── ops-monitor
│   │   └── (snip)
│   ├── scripts
│   └── spec
│       ├── default
│       └── packer
├── roles -&amp;gt; packer/roles
└── spec -&amp;gt; packer/spec
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;nodes はインスタンス個別に yml を設定したいときにつかう想定…だったけど AutoScalingGroup 使い始めたこともあって使っていない&lt;/li&gt;
&lt;li&gt;roles は一つ一つの機能の単位で、 インスタンスにつけている Group というタグと 1:1 で対応し、 AutoScalingGroup もこの role ごとに用意している&lt;/li&gt;

&lt;li&gt;&lt;p&gt;roles の下には default.rb とか production.rb とか staging.rb とかって置くようにしている&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;インスタンスのタグに応じて どっちを使うか決まる&lt;/li&gt;
&lt;li&gt;default はどっちでも使われる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;production.rb
```ruby
node.reverse_merge!({
java: {
tomcat: {
  java_opts: {
    xmx: &amp;ldquo;10240m&amp;rdquo;,
    xms: &amp;ldquo;10240m&amp;rdquo;,
  },
  maxThreads: &amp;ldquo;512&amp;rdquo;,
},
},
td_agent: {
forward: {
  smartnews_action: true
},
},
})&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;include_recipe &amp;ldquo;default.rb&amp;rdquo;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
- default.rb
```ruby
node.reverse_merge!({
  app_name: &amp;quot;hogehoge&amp;quot;,
  java: {
    tomcat: {
      java_opts: {
        xmx: &amp;quot;7680m&amp;quot;,
        xms: &amp;quot;7680m&amp;quot;,
        metaspace_size: &amp;quot;128m&amp;quot;,
      },
    },
  },
  recipes: %W{
    common
    supervisor
    java
    java::tomcat
    nginx
    td_agent
    dd_agent
    dd_agent::nginx
    dd_agent::supervisor
    dd_agent::jmx
    dd_agent::fluentd
  },
})
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;なんかこんな感じになっていて、 &lt;code&gt;itamae local bootstrap.rb&lt;/code&gt; すると &lt;code&gt;bootstrap.rb&lt;/code&gt; の中で、上述したようなタグに応じて適切に &lt;code&gt;include_recipe&lt;/code&gt; してくれるという構成です&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;まとめ:6d5055e16bfca6fb1a3947c2e8ba0343&#34;&gt;まとめ&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;スモールスタートしやすいツールなので itamae おすすめです&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>iPhone5sからiPod touchへ</title>
      <link>http://nobu666.com/2015/09/16/1017.html</link>
      <pubDate>Wed, 16 Sep 2015 23:43:38 +0900</pubDate>
      
      <guid>http://nobu666.com/2015/09/16/1017.html</guid>
      <description>

&lt;h2 id=&#34;background:8549d40d41f28d259ef30596ad3e820d&#34;&gt;background&lt;/h2&gt;

&lt;p&gt;そもそも自分は2台スマホを持ち歩いています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Androidはガラケーからの乗り換えで、主な用途は電話とカラーのものに限ってkindle&lt;/li&gt;
&lt;li&gt;iPhoneは電話は基本使わず、TwitterだのFacebookだの写真だの、こっちをメインで&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;そのiPhoneさまが最近充電しようとしても充電されてくれない(充電マークがでるけど%が増えない)状態になってしまい、復元したりケーブル変えたりいろいろ試したもののどうにも安定して充電されないので、諦めて別の端末を買うことにした。iPhone6s発売直前なのでiPhone6を買うのは馬鹿らしいし、かといってストレスフルすぎて発売まで待っていられない。しかし考えてみれば、電話として使っていないのだからiPhoneである必要ないのでは??? ということで、性能的にはiPhone6とほぼ同等であるiPod touchを買ってみたのでした。&lt;/p&gt;

&lt;h2 id=&#34;よかったところ:8549d40d41f28d259ef30596ad3e820d&#34;&gt;よかったところ&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;CPU的に世代が上がったので動作は違和感なし。速くなった感じはあんまりしない&lt;/li&gt;
&lt;li&gt;iPhone5sより軽くて薄い&lt;/li&gt;
&lt;li&gt;形状的に角がないので持ちやすい&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;いまいちなところ:8549d40d41f28d259ef30596ad3e820d&#34;&gt;いまいちなところ&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;指紋認証が使えないのが思ったより面倒

&lt;ul&gt;
&lt;li&gt;かといって4桁パスワード使いたくないしなぁ。ここは諦めるしかない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;マナーモードという概念がないので、ミュートスイッチがない

&lt;ul&gt;
&lt;li&gt;まぁこれは我慢できる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;バイブ機能がないので、通知に気づかない

&lt;ul&gt;
&lt;li&gt;こっちは結構致命的…&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;今後のプラン:8549d40d41f28d259ef30596ad3e820d&#34;&gt;今後のプラン&lt;/h2&gt;

&lt;p&gt;音楽を聴くのにいまさらiTunesから移行するのは辛すぎるので、iPod touchは純粋に音楽聴く用途にして、メインはAndroidのほうに移すことにする。というのも最近Androidの質が劇的に上がっていて、別にAndroidで困ることがなくなってきたから。今はすげー激安で手に入れたGalaxy J使ってるんだけどさすがにこの子はもっさりしてて厳しいので、Nexus5 2015を買いたいなーと思っている。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mac OS XでパスワードやトークンをKeychain管理にしてスクリプトから使う方法</title>
      <link>http://nobu666.com/2015/06/26/1016.html</link>
      <pubDate>Fri, 26 Jun 2015 20:46:09 +0900</pubDate>
      
      <guid>http://nobu666.com/2015/06/26/1016.html</guid>
      <description>

&lt;p&gt;例えば &lt;code&gt;.zshrc&lt;/code&gt; とかに &lt;code&gt;HOMEBREW_GITHUB_API_TOKEN&lt;/code&gt; をexportしてるけど、このファイルを人に見せることになると困る。回避方法としては &lt;code&gt;~/.github_token&lt;/code&gt; を別途作ってそっちに値を書き込んで置いて&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;if [ -f ~/.github_token ]; then
  . ~/.github_token
fi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;こんなふうにするという解決策もあるにはある。が、もうちょっとセキュアかつ簡単な方法はないものか、ということで以下のようにすると捗った&lt;/p&gt;

&lt;h2 id=&#34;keychainに値を登録する:e1867217de400bc30fb87cf008200204&#34;&gt;Keychainに値を登録する&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;security add-generic-password -a homebrew-github-api-key -s homebrew-github-api-key -w XXXXXXXXXXXXXXX
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;keychainから値をとりだす:e1867217de400bc30fb87cf008200204&#34;&gt;Keychainから値をとりだす&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;security find-generic-password -ga homebrew-github-api-key
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;このままだと余計な情報もたくさん取れてきてしまうので、必要な部分だけ抜き出すようにする&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;security find-generic-password -ga homebrew-github-api-key 2&amp;gt;&amp;amp;1 &amp;gt;/dev/null | ruby -e &#39;print $1 if STDIN.gets =~ /^password: &amp;quot;(.*)&amp;quot;$/&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これでファイルに直接書かないでよくなったので、.zshrcとかでexportするときも &lt;code&gt;$(security ...)&lt;/code&gt; をexportしてやればいい。うむ。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>WordPressからGitHub Pages &#43; hugoに移行した</title>
      <link>http://nobu666.com/2015/06/21/1015.html</link>
      <pubDate>Sun, 21 Jun 2015 00:00:00 +0900</pubDate>
      
      <guid>http://nobu666.com/2015/06/21/1015.html</guid>
      <description>

&lt;h1 id=&#34;wordpressからgithub-pages-hugoに移行した:ba6f5a981bdff4ffd1776fc8905f369b&#34;&gt;WordPressからGitHub Pages + hugoに移行した&lt;/h1&gt;

&lt;p&gt;WordPressでずっと運用してきたのだけど、PHPやWordPressの脆弱性の多さにつかれたのと、そろそろVPS自体管理するの辞めたいと思っていたので、static site generatorであるところのHugoを使ってGithub Pagesで運用することにしました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://gohugo.io/&#34;&gt;Hugo :: A fase and modern static website engine&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CLIだけで操作できて素晴らしい&lt;/li&gt;
&lt;li&gt;サーバの管理から開放されて素晴らしい&lt;/li&gt;
&lt;li&gt;Markdownで書けて素晴らしい&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;static site generatorは上記の点が素晴らしいのですが、Jekyll・Octopress・Middlemanなどいくつも選択肢がある中でHugoを選んだ理由は&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;純粋にgolang使いたかった&lt;/li&gt;
&lt;li&gt;ファイルの生成がすごい速い&lt;/li&gt;
&lt;li&gt;ローカルでserver立ち上げて、ファイル更新すると勝手にリロードするところまで面倒みてくれる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;というところ。ただデメリットもあって、まだイマイチマイナーなため、themeの数が少ないです。あと単純に-t hogehogeでtheme選ぶだけではERROR出て動かないことがままあります。&lt;/p&gt;

&lt;h2 id=&#34;install:ba6f5a981bdff4ffd1776fc8905f369b&#34;&gt;install&lt;/h2&gt;

&lt;p&gt;Macなら&lt;code&gt;brew install hugo&lt;/code&gt;で一発です&lt;/p&gt;

&lt;h2 id=&#34;作業ディレクトリの作成:ba6f5a981bdff4ffd1776fc8905f369b&#34;&gt;作業ディレクトリの作成&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;hugo new site nobu666.com&lt;/code&gt;を適当な場所で作ります。&lt;/p&gt;

&lt;h2 id=&#34;themeを選ぶ:ba6f5a981bdff4ffd1776fc8905f369b&#34;&gt;themeを選ぶ&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;git clone --recursive https://github.com/spf13/hugoThemes.git themes&lt;/code&gt;で一括で持ってこれます。が、ここにはないthemeを公開してる人もいるので、好きなのが決まってればそれを&lt;code&gt;themes/&lt;/code&gt;の下に&lt;code&gt;git clone&lt;/code&gt;してくればいいです&lt;/p&gt;

&lt;h2 id=&#34;wordpressからimport:ba6f5a981bdff4ffd1776fc8905f369b&#34;&gt;WordPressからimport&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://gist.github.com/rakuishi/3163f6e8c5a496329bc7&#34;&gt;wp-xml-hugo-import.rb&lt;/a&gt;をまるっと拝借して、WordPressからexportしたxmlを変換します。自分のblogではpermalinkが&lt;code&gt;yyyy/mm/dd/post_id.html&lt;/code&gt;だったので、それに合わせてslugの指定を削除したり、ソースコードの部分を&lt;code&gt;[sourcecode][/sourcecode]&lt;/code&gt;で囲んで書いていたのでそこをmarkdownに書き換える処理を入れたりしました。あとtitleに &lt;code&gt;&amp;quot;&lt;/code&gt; が入ってるとparse errorになってしまうので、&lt;code&gt;\&amp;quot;&lt;/code&gt;に置換しておきます。ファイル名も yyyy-mm-dd-post_id では都合がわるいので、既存の形式に合わせてmkdirしたり出力したりします。&lt;/p&gt;

&lt;h2 id=&#34;画像を持ってくる:ba6f5a981bdff4ffd1776fc8905f369b&#34;&gt;画像を持ってくる&lt;/h2&gt;

&lt;p&gt;既存のサイトの&lt;code&gt;wp-contents/uploads&lt;/code&gt;から、ローカルの&lt;code&gt;static/images&lt;/code&gt;にscpなりなんなりで持ってきます。&lt;/p&gt;

&lt;h2 id=&#34;ローカルで起動:ba6f5a981bdff4ffd1776fc8905f369b&#34;&gt;ローカルで起動&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;hugo server -t テーマの名前 -D -w&lt;/code&gt;でローカル環境が起動します。 &lt;code&gt;http://localhost:1313&lt;/code&gt;をブラウザで開いて動作確認しましょう。サイト名とかslug使わないで.htmlにしたいとか、そういうのはconfig.tomlで設定します。残念ながらconfig.tomlの変更はライブリロード対応してないので、変更したら立ち上げ直す必要があります。自分の場合はslug使っていなかったので、&lt;code&gt;uglyurls = true&lt;/code&gt;はとりあえず必須でした。&lt;/p&gt;

&lt;h2 id=&#34;公開用のファイルを生成する:ba6f5a981bdff4ffd1776fc8905f369b&#34;&gt;公開用のファイルを生成する&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;hugo -t テーマの名前&lt;/code&gt;でファイルが生成されます。&lt;/p&gt;

&lt;h2 id=&#34;公開する:ba6f5a981bdff4ffd1776fc8905f369b&#34;&gt;公開する&lt;/h2&gt;

&lt;p&gt;publicディレクトリで&lt;code&gt;git init&lt;/code&gt;とかごにょごにょして&lt;code&gt;アカウント名.github.io&lt;/code&gt;なリポジトリにpushします。基本的にはこれでおしまい。&lt;/p&gt;

&lt;h2 id=&#34;独自ドメインでgithub-pagesを使う:ba6f5a981bdff4ffd1776fc8905f369b&#34;&gt;独自ドメインでGitHub Pagesを使う&lt;/h2&gt;

&lt;p&gt;subdomainありかなしかでやることが違います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;subdomainありの場合

&lt;ul&gt;
&lt;li&gt;DNSでCNAMEレコードを追加&lt;/li&gt;
&lt;li&gt;publicディレクトリにCNAMEファイルを作成してpush&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;subdomainなし(Zone Apex)の場合

&lt;ul&gt;
&lt;li&gt;DNSのAレコードを以下の2つ追加&lt;/li&gt;
&lt;li&gt;192.30.252.153&lt;/li&gt;
&lt;li&gt;192.30.252.154&lt;/li&gt;
&lt;li&gt;publicディレクトリにCNAMEファイルを作成してpush&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;今後の方針:ba6f5a981bdff4ffd1776fc8905f369b&#34;&gt;今後の方針&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://gohugo.io/tutorials/automated-deployments&#34;&gt;本家のチュートリアルに従って&lt;/a&gt;Wercker使ってpushしたらそのまま公開される仕組みにしたい。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SmartNewsにjoinしました</title>
      <link>http://nobu666.com/2015/05/16/1014.html</link>
      <pubDate>Sat, 16 May 2015 02:43:38 +0900</pubDate>
      
      <guid>http://nobu666.com/2015/05/16/1014.html</guid>
      <description>&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;ja&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;サラリーマンに戻りました &lt;a href=&#34;http://t.co/5HLV3RtgyK&#34;&gt;pic.twitter.com/5HLV3RtgyK&lt;/a&gt;&lt;/p&gt;&amp;mdash; Nobutoshi Ogata (@nobu666) &lt;a href=&#34;https://twitter.com/nobu666/status/597587895541735425&#34;&gt;2015, 5月 11&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;blogの時系列的に正しくいうと、ハッチ株式会社にjoinしました→退職しました→からのやつです。グリー退職から1年くらいですが、まぁすったもんだあって、という。なんで1年で辞めちゃったのさみたいな話は、基本的に公にするつもりはないので聞きたければ飲みに行きましょう。気が向いたら話します。&lt;/p&gt;

&lt;p&gt;というわけで5/11からSmartNewsで働いています。当面はインフラ寄りの&lt;a href=&#34;https://twitter.com/takus&#34;&gt;@takus&lt;/a&gt;くんがやってる作業を引き継ぎつつ、自動化を進めたりセキュリティ強化したりコスト最適化したりということをやっていくことになる気がします。グリー出身者とDeNA出身者が隣に座っているのはなかなか趣があります。&lt;/p&gt;

&lt;p&gt;当面の目標としては英語の勉強ちゃんとやろう、ということでして。サンフランシスコとニューヨークにオフィスがあるし、日本オフィスでも英語が飛び交っているし、slackも英語が飛び交っているし。業務の合間を縫って、かつプライベートの時間をガツッと使って英語をどうにか勉強してついていけるようにしないとなぁと心底思っておる次第でございます。半期に1回渡航できる制度が存在するので、まずは10月のre:inventに行きたいなぁと思いを馳せつつ、行くからには収穫がなければダメなわけで、話せないまでも言ってることはわかるレベルになっておかないと無駄金なので頑張ります。&lt;/p&gt;

&lt;p&gt;つきましてはご心配頂いた方々、ありがたいことにお声がけ頂いた皆様、ありがとうございました!!&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.amazon.co.jp/gp/registry/wishlist/ref=nav_gno_listpop_wi?sort=priority&amp;view=null&#34;&gt;http://www.amazon.co.jp/gp/registry/wishlist/ref=nav_gno_listpop_wi?sort=priority&amp;view=null&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>猫を飼うときに買っておくといいもの</title>
      <link>http://nobu666.com/2015/05/16/1012.html</link>
      <pubDate>Sat, 16 May 2015 01:42:54 +0900</pubDate>
      
      <guid>http://nobu666.com/2015/05/16/1012.html</guid>
      <description>&lt;p&gt;某後輩が猫を飼い始めるようなので、俺が買ったものや、買ったら便利なものを紹介しておく。アフィカス。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00EXINMZK/realbeat-22/ref=nosim/&#34; name=&#34;amazletlink&#34; target=&#34;_blank&#34;&gt;アイリスオーヤマ 砂落としマット付脱臭ネコトイレ ミルキーピンク SN-620&lt;/a&gt;
まずトイレ。2匹かう場合は3つ必要、と言われている。蓋付きで、蓋に脱臭剤を入れる場所があるのと、出入口に段差があってそこがスノコのようになっていて、猫の足についた砂が落ちるようになっている。まぁそれでも砂が飛び散るが、ないよりはマシである。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00KIHYZV0/realbeat-22/ref=nosim/&#34; name=&#34;amazletlink&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51hBYMSlF7L._SL160_.jpg&#34; alt=&#34;常陸化工 おからの猫砂グリーン6L×4個 (ケース)&#34; style=&#34;border: none;&#34; /&gt;&lt;/a&gt;
砂。おからでできているので、猫が口にしてしまっても問題ないし、トイレに流すこともできる。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B007CSY928/realbeat-22/ref=nosim/&#34; name=&#34;amazletlink&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51mv2x7JvfL._SL160_.jpg&#34; alt=&#34;ジェックス ピュアクリスタル複数飼育猫用&#34; style=&#34;border: none;&#34; /&gt;&lt;/a&gt;
給水器。やっぱ流れるほうが好んで飲む。大きいほうが安定するので、あんま小さいやつはおすすめしない。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B007KE1TSQ/realbeat-22/ref=nosim/&#34; name=&#34;amazletlink&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51-KjFkaz7L._SL160_.jpg&#34; alt=&#34;ジェックス ピュアクリスタル 交換用フィルター 猫用 2個入&#34; style=&#34;border: none;&#34; /&gt;&lt;/a&gt;
↑のフィルター。多めに買ってストックしておくといい&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00BXV6NU6/realbeat-22/ref=nosim/&#34; name=&#34;amazletlink&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/41wYHuJwuHL._SL160_.jpg&#34; alt=&#34;ジェックス ピュアクリスタルクリーンキーパー&#34; style=&#34;border: none;&#34; /&gt;&lt;/a&gt;
↑の掃除道具。別にコレじゃなくてもいいけど、この手のものがないと穴を綺麗に洗えない。あと人間用と猫用でスポンジも分けたいなーと&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00WTT3DIG/realbeat-22/ref=nosim/&#34; name=&#34;amazletlink&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/418ccozGRuL._SL160_.jpg&#34; alt=&#34;【Phenovo】超強力マジックテープ 強力粘着 業務用 固定用 ベルクロ (黒)&#34; style=&#34;border: none;&#34; /&gt;&lt;/a&gt;
マジックテープ。なぜこんなものが…?と思うかもしれないが、これで給水器をケージに固定するのです。うちの奴らがでかすぎるからなのかもしれないが、容赦なくひっくり返して水浸しにするので、もはやコレがないと生きていけない&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B002YSKF2O/realbeat-22/ref=nosim/&#34; name=&#34;amazletlink&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51u%2BaT42klL._SL160_.jpg&#34; alt=&#34;マルカン キティケージ690 DC-260&#34; style=&#34;border: none;&#34; /&gt;&lt;/a&gt;
ケージ。やはり段差があるほうがよろこぶ模様&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00KHQVJDE/realbeat-22/ref=nosim/&#34; name=&#34;amazletlink&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51kEOkRxDUL._SL160_.jpg&#34; alt=&#34;【 IATA 基準クリア】ペットキャリーバッグ50　ブラウン 小型犬猫用　適応体重：10kgまで　小動物用にも&#34; style=&#34;border: none;&#34; /&gt;&lt;/a&gt;
キャリー。ワクチン打つとか、シャンプーしてもらうとか、なにかと使うので必須。絶対上が開くタイプがよい。じゃないと嫌がられるとキャリーに入れられない&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B007NRGP8Y/realbeat-22/ref=nosim/&#34; name=&#34;amazletlink&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/31Mc-jXCA3L._SL160_.jpg&#34; alt=&#34;一毛打尽　ペットの抜け毛をグングンお掃除&#34; style=&#34;border: none;&#34; /&gt;&lt;/a&gt;
猫の毛を集めまくるお掃除道具。クッションとかソファとか、これないと死ぬ&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B002KFCP8S/realbeat-22/ref=nosim/&#34; name=&#34;amazletlink&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/31l3PjtbUvL._SL160_.jpg&#34; alt=&#34;アイリスオーヤマ 簡単抜け毛取りクリーナー イエロー KNC-N77A&#34; style=&#34;border: none;&#34; /&gt;&lt;/a&gt;
同じく毛取り。↑のは小回りが効くが、毛がついてるところの素材によっては力を入れないと取れなくて疲れるので、使い分けると楽&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B000WMOCR8/realbeat-22/ref=nosim/&#34; name=&#34;amazletlink&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/61QOklmKKLL._SL160_.jpg&#34; alt=&#34;Wサッシロック 4P シルバー 1117&#34; style=&#34;border: none;&#34; /&gt;&lt;/a&gt;
網戸ロック。これやっておかないと、やつらは網戸を勝手に開けて外に出て行く可能性がある。うちの子は二階から飛び降りた&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B004MIC248/realbeat-22/ref=nosim/&#34; name=&#34;amazletlink&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/317OdsLyo%2BL._SL160_.jpg&#34; alt=&#34;ミュー (mju:)  ネコにやさしい食器 S&#34; style=&#34;border: none;&#34; /&gt;&lt;/a&gt;
餌用の皿。サイズ的にもちょうどいいし、2-3個買っておくといい&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0039XT754/realbeat-22/ref=nosim/&#34; name=&#34;amazletlink&#34; target=&#34;_blank&#34;&gt;ヘアードライヤースタンド&lt;/a&gt;
お店でシャンプーしてもらうとしても、子猫のうちは下痢して汚れたりしがち。なのでこういうのでハンズフリーで乾かせるようになっていると楽ちん。2人でやればなくてもいいが、汚れたときに必ず2人いるとは限らないのである&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B004E4J0GS/realbeat-22/ref=nosim/&#34; name=&#34;amazletlink&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/41knaSjzZcL._SL160_.jpg&#34; alt=&#34;ファーミネーター 小型猫 S 短毛種用&#34; style=&#34;border: none;&#34; /&gt;&lt;/a&gt;
換毛期用のスリッカー。毎日使うものではないけど、あると便利。すげーとれる&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0015MUZLG/realbeat-22/ref=nosim/&#34; name=&#34;amazletlink&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51rUlF%2BBlJL._SL160_.jpg&#34; alt=&#34;ONS スリッカーブラシ ソフトタイプ 小&#34; style=&#34;border: none;&#34; /&gt;&lt;/a&gt;
毎日使う用。最初は嫌がるかも知れないが、そのうち慣れる。いやアメショーなら毎日はやらんでもいいのかな…&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B005BLYF0O/realbeat-22/ref=nosim/&#34; name=&#34;amazletlink&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/31WgpoPfxrL._SL160_.jpg&#34; alt=&#34;廣田工具製作所 ペット用つめ切り ネイルトリマー ZAN ギロチンタイプ 小型犬・中型犬用&#34; style=&#34;border: none;&#34; /&gt;&lt;/a&gt;
爪切り。ギロチンタイプのほうがやりやすい気がする&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B003YF379Y/realbeat-22/ref=nosim/&#34; name=&#34;amazletlink&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51Ng4AIy2ZL._SL160_.jpg&#34; alt=&#34;クイックストップ（動物用医薬品）&#34; style=&#34;border: none;&#34; /&gt;&lt;/a&gt;
深爪で血が出てしまったとき用の止血剤。あると安心&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B003IUD08I/realbeat-22/ref=nosim/&#34; name=&#34;amazletlink&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/31qQ1HRT%2BmL._SL160_.jpg&#34; alt=&#34;リンテックコマース ペット壁保護シート(弱粘) M PETP-02M&#34; style=&#34;border: none;&#34; /&gt;&lt;/a&gt;
いきなり買う必要はないかも知れないが、あれば安心の壁保護シート。壁紙剥がされてからでは遅いので、先手を打って張っておくといいかも知れないが、見た目はまぁお察し&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00P8W17N4/realbeat-22/ref=nosim/&#34; name=&#34;amazletlink&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/416YpvdXAGL._SL160_.jpg&#34; alt=&#34;ファーミネーター ブラッシングスプレー 猫用&#34; style=&#34;border: none;&#34; /&gt;&lt;/a&gt;
冬場はこの手のスプレー使わないと、ブラッシングのたびに静電気がパチパチいってやばい&lt;/p&gt;

&lt;p&gt;あと買い物じゃないけど、避妊手術はちゃんとしましょう。タイミングは医者によって言うことが違うので、医者と相談しよう。半年くらいでやることが多いっぽい。雌だと入院だ。費用は雄なら1-2万、雌だと倍。あと心配ならマイクロチップの埋め込みもやっておくといいかも知れない。万が一逃げ出してしまったりしたときのために。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>グリー株式会社を退職します</title>
      <link>http://nobu666.com/2014/03/25/1006.html</link>
      <pubDate>Tue, 25 Mar 2014 09:25:50 +0900</pubDate>
      
      <guid>http://nobu666.com/2014/03/25/1006.html</guid>
      <description>&lt;p&gt;3/20を最終出社としてグリー株式会社を退職することにしました。2年8ヶ月ほどお世話になりました。&lt;/p&gt;

&lt;p&gt;グダグダ思い出を語ってみようと下書きまでしたんだけど、知ってる人だけ面白い飲み会ネタになってしまったので消しましたｗ&lt;/p&gt;

&lt;p&gt;もう夜中にアラートなって起こされることもないかと思うと、嬉しくもあり寂しくもあります。ご飯仲間・飲み仲間の皆様におかれましては、またいつでも呼んでください！&lt;/p&gt;

&lt;p&gt;じゃあの。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ScalaでProject Euler</title>
      <link>http://nobu666.com/2013/04/07/996.html</link>
      <pubDate>Sun, 07 Apr 2013 16:31:17 +0900</pubDate>
      
      <guid>http://nobu666.com/2013/04/07/996.html</guid>
      <description>&lt;iframe src=&#34;http://rcm-jp.amazon.co.jp/e/cm?t=realbeat-22&amp;o=9&amp;p=8&amp;l=as1&amp;asins=4844330845&amp;ref=qf_sp_asin_til&amp;fc1=000000&amp;IS2=1&amp;lt1=_blank&amp;m=amazon&amp;lc1=0000FF&amp;bc1=000000&amp;bg1=FFFFFF&amp;f=ifr&#34; style=&#34;width:120px;height:240px;&#34; scrolling=&#34;no&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;

&lt;p&gt;最近&lt;a href=&#34;http://www.amazon.co.jp/gp/product/4844330845/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=247&amp;creative=1211&amp;creativeASIN=4844330845&amp;linkCode=as2&amp;tag=realbeat-22&#34; title=&#34;Scalaスケーラブルプログラミング第2版&#34;&gt;コップ本&lt;/a&gt;一回読んだまま放置していたScalaをまた始めたので、とりあえず習うより慣れろの方針で&lt;a href=&#34;http://projecteuler.net/&#34; title=&#34;Project Euler&#34;&gt;Project Euler&lt;/a&gt;始めた。数学をかなり忘れているので、アルゴリズムを調べながらまったり進めようかと。コードは&lt;a href=&#34;https://github.com/nobu666/Euler-Scala&#34; title=&#34;github.com/nobu666/Euler-Scala&#34;&gt;github&lt;/a&gt;にまとめていく所存。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Solr勉強会第10回で話をしてきました</title>
      <link>http://nobu666.com/2013/03/27/991.html</link>
      <pubDate>Wed, 27 Mar 2013 01:53:18 +0900</pubDate>
      
      <guid>http://nobu666.com/2013/03/27/991.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://atnd.org/events/37170&#34; title=&#34;Solr勉強会第10回&#34;&gt;Solr勉強会第10回&lt;/a&gt;に参加して、話をさせて頂きました。&lt;a href=&#34;https://twitter.com/johtani&#34; title=&#34;@johtani&#34;&gt;@johtani&lt;/a&gt;さん、主催お疲れ様でした。また、会場を提供して頂き、ピザとビールをたらふくごちそうして頂いた&lt;a href=&#34;http://voyagegroup.com/&#34; title=&#34;VOYAGE GROUP&#34;&gt;VOYAGE GROUP&lt;/a&gt;様ありがとうございました。&lt;/p&gt;

&lt;p&gt;発表させていただいた資料は以下になります。&lt;/p&gt;

&lt;iframe src=&#34;http://www.slideshare.net/slideshow/embed_code/17711986&#34; width=&#34;427&#34; height=&#34;356&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; style=&#34;border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px&#34; allowfullscreen webkitallowfullscreen mozallowfullscreen&gt; &lt;/iframe&gt;

&lt;div style=&#34;margin-bottom:5px&#34;&gt; &lt;strong&gt; &lt;a href=&#34;http://www.slideshare.net/NobutoshiOgata/solr10&#34; title=&#34;Solr勉強会第10回&#34; target=&#34;_blank&#34;&gt;Solr勉強会第10回&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&#34;http://www.slideshare.net/NobutoshiOgata&#34; target=&#34;_blank&#34;&gt;Nobutoshi Ogata&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;

&lt;p&gt;歴史と銘打ったからにはもう少し古い時代の話を盛り込みたかったのですが、資料が現存していなかったりなんだりで、あまり突っ込んだ話をできませんでした。ただまぁSolr勉強会でSennaやTritonnの話を細かくしないでもいいかなということで、Luceneを使っていたときの話とSolrに乗り換えた話をメインにさせてもらいました。&lt;a href=&#34;http://www.slideshare.net/KojiSekiguchi/wikipediasolr&#34; title=&#34;辞書型コーパスからの類似語知識の獲得&#34;&gt;関口さんのプレゼン&lt;/a&gt;のあとだったので、これは空気的に俺が喋っていいのだろうかと思って内心焦ったのですがｗ 事例のひとつとしてなにかの参考なれば幸いです。&lt;/p&gt;

&lt;p&gt;他の方の発表がどういう感じだったのかという辺りは、『&lt;a href=&#34;http://shinodogg.com/?p=5098&#34; title=&#34;第10回Solr勉強会 at VOYAGE GROUPに行ってきました&#34;&gt;第10回Solr勉強会 at VOYAGE GROUPに行ってきました&lt;/a&gt;』『&lt;a href=&#34;http://johtani.jugem.jp/?eid=124&#34; title=&#34;第10回Solr勉強会を主催しました。#SolrJP&#34;&gt;第10回Solr勉強会を主催しました。#SolrJP&lt;/a&gt;』このあたりをご参照いただければ。&lt;/p&gt;

&lt;p&gt;懇親会でもいろいろな方とお話しさせていただいて大変刺激を受けましたので、検索周りでなにか新しいことにチャレンジする機会があればぜひフィードバックしていきたいな思いました。Solr CloudやらElastic Searchやら最近おもしろいものが出てきていますし、Solr単体でもまだ色々工夫のしがいがあるところだと思いますので精進しようと思います。参加されたみなさまお疲れ様でした。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Chef11のchef-serverをHA構成にする</title>
      <link>http://nobu666.com/2013/03/13/985.html</link>
      <pubDate>Wed, 13 Mar 2013 15:36:50 +0900</pubDate>
      
      <guid>http://nobu666.com/2013/03/13/985.html</guid>
      <description>&lt;h1&gt;Chef11のchef-serverをHA構成にする&lt;/h1&gt;

&lt;h2&gt;はじめに&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://wiki.opscode.com/display/chef/Chef+11+Server+Preview&#34; title=&#34;Chef11&#34;&gt;Chef11&lt;/a&gt;はいままでのChefとはserverの構成がガラリと変わり、APIがRubyからErlangに、バックエンドのCouchDBがPostgreSQLになりました。その他はフロントエンドには&lt;a href=&#34;http://nginx.org/&#34; title=&#34;nginx&#34;&gt;nginx&lt;/a&gt;、WebUIに&lt;a href=&#34;http://unicorn.bogomips.org/&#34; title=&#34;unicorn&#34;&gt;unicorn&lt;/a&gt;。&lt;a href=&#34;http://www.rabbitmq.com/&#34; title=&#34;RabbitMQ&#34;&gt;RabbitMQ&lt;/a&gt;と&lt;a href=&#34;http://lucene.apache.org/solr/&#34; title=&#34;Solr&#34;&gt;Solr&lt;/a&gt;はそのまま。&lt;/p&gt;

&lt;p&gt;基本的にそのまま使ってて問題ないのだけども、やはりサーバーは壊れるのでバックアップがないと困るよね、ということで調べてもあんまり情報がなかったので、やってみたメモを残します。めんどいのでrootで作業しています。&lt;/p&gt;

&lt;p&gt;&lt;h2&gt;とりあえずinstallする&lt;/h2&gt;
先ほどの&lt;a href=&#34;http://wiki.opscode.com/display/chef/Chef+11+Server+Preview&#34; title=&#34;Chef11&#34;&gt;Chef11&lt;/a&gt;のWikiにある、Quick Startをみて、Platformにあったパッケージをダウンロード。もしくは&lt;a href=&#34;http://www.opscode.com/chef/install/&#34; title=&#34;Install Chef&#34;&gt;Install Chef&lt;/a&gt;というページからダウンロード。Debian6でやりましたが、Ubuntu12用のパッケージではうまく動きませんでしたので、Ubuntu10用のを使いました。11のは知らん。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# wget https://opscode-omnitruck-release.s3.amazonaws.com/ubuntu/10.04/x86_64/chef-server_11.0.6-1.ubuntu.10.04_amd64.deb
# dpkg -i chef-server_11.0.6-1.ubuntu.10.04_amd64.deb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;PrimaryとSecondary、2台のサーバーに入れましょう。&lt;/p&gt;

&lt;p&gt;&lt;h2&gt;PostgreSQLのReplication&lt;/h2&gt;
PostgreSQLはほとんど知らないし、Chef11のパッケージは /opt/chef-server 以下にRubyやGemsやPostgreSQLやその他依存もろもろすっぽり収まって完結しているため、普通にPostgreSQLをinstallした場合とは勝手がちょっと違うので注意が必要です。&lt;/p&gt;

&lt;p&gt;&lt;h3&gt;Primaryの設定&lt;/h3&gt;
設定ファイルは /var/opt/chef-server/postgresql/data 以下にあります。まずアクセス許可。SECONDARY_SERVER_IPADDRESSは任意に読み替えてください。サブネットマスクまで必須です。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# echo &amp;quot;host replication repl_user SECONDARY_SERVER_IPADDRESS/0 trust&amp;quot; &amp;gt;&amp;gt; /var/opt/chef-server/postgresql/data/pg_hba.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;次にReplicationの設定。/var/opt/chef-server/postgresql/data/postgresql.conf をエディタで開いて、以下のようにします。hot_standby = onの設定はここでは意味が無いですが、あとでこのファイルがそのままSecondary側にコピーされるのでここで変えておいて問題ないです。
&lt;ul&gt;
    &lt;li&gt;listen_addresses = &amp;lsquo;*&amp;rsquo;&lt;/li&gt;
    &lt;li&gt;wal_level = hot_standby&lt;/li&gt;
    &lt;li&gt;max_wal_senders = 1&lt;/li&gt;
    &lt;li&gt;hot_standby = on&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;

&lt;p&gt;次にPostgreSQLのシェルに入ってユーザーを作りますが、opscode-pgsqlユーザーにならないとシェルに入れないので面倒です。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# su opscode-pgsql -
$ pgsql postgres -c &amp;quot;CREATE ROLE repl_user LOGIN REPLICATION PASSWORD &#39;P@ssw0Rd&#39;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ここまでやったらPostgreSQLを再起動。Chef11のコンポーネントたちは、daemontoolsの下で動いているので普通には再起動できません。が、専用の管理コマンドが用意されているのでそいつを使います。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# chef-server-ctl restart postgresql
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;h3&gt;Secondaryの設定&lt;/h3&gt;
Primaryからdebファイルをscpするなりこっちでもwgetするなりして、dpkg -iまでは一緒。installが終わったらPostgreSQLまわりの掃除をします。とりあえず止めて、消す。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# chef-server-ctl stop postgresql
# rm -rf /var/opt/chef-server/postgresql/data
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;消したらPrimaryからデータを持ってきます。PRIMARY_SERVER_IPADDRESSは任意に読み替えてください。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# /opt/chef-server/embedded/bin/pg_basebackup -x -p 5432 -h PRIMARY_SERVER_IPADDRESS -U repl_user -W -D /var/opt/chef-server/postgresql/data --progress --verbose
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;終わったらrecovery.confを作ります。sampleからコピって書き換えます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# cp /opt/chef-server/embedded/share/postgresql/recovery.conf.sample /var/opt/chef-server/postgresql/data/recovery.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;/var/opt/chef-server/postgresql/data/recovery.conf で最低限以下のようにいじる。application_nameは別になんでもいいっぽいです。
&lt;ul&gt;
    &lt;li&gt;standby_mode = on&lt;/li&gt;
    &lt;li&gt;primary_conninfo = &amp;lsquo;host=PRIMARY_SERVER_IPADDRESS port=5432 user=repl_user password=P@ssw0Rd application_name=stby&amp;rsquo;&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;

&lt;p&gt;あとはrootで作業してしまったのでownerを変えて起動。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# chown -R opscode-pgsql:opscode-pgsql /var/opt/chef-server/postgresql/data
# chef-server-ctl start postgresql
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;chef-server-ctl tailでログをみたり、chef-server-ctl statusでpostgresqlがrunになっていることを確認できればOKです。また、Primary側で以下のコマンドを叩くことでも確認できます。stateがstreamingになっていればOK。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo -u opscode-pgsql psql opscode_chef -c &amp;quot;SELECT * FROM pg_stat_replication&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;念のためSolrのindexは作りなおしておいたほうがいいです。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# chef-server-ctl reindex
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;h2&gt;切り替える&lt;/h2&gt;
さてフェイルオーバーさせてみます。いくつか方法がありますが、とりあえず手動でやります。Secondary側で、opscode-pgsqlユーザーで操作します。SecondaryはRead-Onlyなので、 CREATE TABLE test (i integer) とかやって失敗→切り替え→もっかいやったら成功、でPrimaryになったことを確認できます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ /opt/chef-server/embedded/bin/pg_ctl promote -D /var/opt/chef-server/postgresql/data
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;こんだけ。また2台構成に戻すには、同じ事をやってやればいいはずです。が、時間経ちすぎてWALファイルがなくなっちゃったとか、転送前にコケてて欠落してるとか、そういう場合はその限りではありません。ていうかそれはChefと関係ないんでそっち方面のマニュアルみるなり調べるなりしてください。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>UbuntuにOpenGrokをinstall</title>
      <link>http://nobu666.com/2013/03/05/974.html</link>
      <pubDate>Tue, 05 Mar 2013 14:36:15 +0900</pubDate>
      
      <guid>http://nobu666.com/2013/03/05/974.html</guid>
      <description>&lt;p&gt;俺メモ&lt;/p&gt;

&lt;p&gt;[sourcecode language=&amp;ldquo;bash&amp;rdquo;]
sudo apt-get update
sudo apt-get install openjdk-6-jdk
sudo apt-get install tomcat7
wget &lt;a href=&#34;http://prdownloads.sourceforge.net/ctags/ctags-5.8.tar.gz&#34;&gt;http://prdownloads.sourceforge.net/ctags/ctags-5.8.tar.gz&lt;/a&gt;
tar xf ctags-5.8.tar.gz
cd ctags-5.8/
./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; sudo make install
cd ..
wget &lt;a href=&#34;http://hub.opensolaris.org/bin/download/Project+opengrok/files/opengrok-0.11.1.tar.gz&#34;&gt;http://hub.opensolaris.org/bin/download/Project+opengrok/files/opengrok-0.11.1.tar.gz&lt;/a&gt;
tar xf opengrok-0.11.1.tar.gz
wget &lt;a href=&#34;http://jflex.de/jflex-1.4.3.tar.gz&#34;&gt;http://jflex.de/jflex-1.4.3.tar.gz&lt;/a&gt;
tar xf jflex-1.4.3.tar.gz
cp jflex-1.4.3/lib/JFlex.jar opengrok-0.11.1/lib/lib/
echo &amp;ldquo;export JAVA_HOME=/usr/lib/jvm/java-6-openjdk-amd64&amp;rdquo; &amp;gt;&amp;gt; .bashrc
echo &amp;ldquo;EXUBERANT_CTAGS=/usr/local/bin/ctags&amp;rdquo; &amp;gt;&amp;gt; .bashrc
sudo sed -i &amp;ldquo;s/port=\&amp;ldquo;8080\&amp;ldquo;/port=\&amp;ldquo;2424\&amp;ldquo;/&amp;rdquo; /etc/tomcat7/server.xml
sudo /etc/init.d/tomcat restart
sudo mkdir -p /var/opengrok/{etc,data,src}
sudo chown -R tomcat7:tomcat7 /var/opengrok
sudo chown -R &lt;code&gt;whoami&lt;/code&gt;:&lt;code&gt;whoami&lt;/code&gt; /var/opengrok/src
sudo -u tomcat7 opengrok-0.11/bin/OpenGrok index
sudo -u tomcat7 OPENGROK_TOMCAT_BASE=/var/lib/tomcat7 opengrok-0.11/bin/OpenGrok deploy
```&lt;/p&gt;

&lt;p&gt;あとは /var/opengrok-0.11.1/src に検索対象のソースコード突っ込んでOpenGrok indexし直すだけ。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ChefでRoleやRecipeを実行するとき渡すべき必須のattributesをチェックする</title>
      <link>http://nobu666.com/2013/02/21/959.html</link>
      <pubDate>Thu, 21 Feb 2013 16:06:57 +0900</pubDate>
      
      <guid>http://nobu666.com/2013/02/21/959.html</guid>
      <description>&lt;p&gt;例えばlvsを構築するときに、その下にぶら下がるreal serverたちのIPアドレスとかって、chef-client実行するときに-jオプション使ってjsonでattributes渡して欲しいわけですが、実際に実行する前に必須のものがなければ弾きたい、と思って色々ためした結果&lt;/p&gt;

&lt;p&gt;Roleならjsonに、Recipeならattributes/default.rbに、&lt;strong&gt;required&lt;/strong&gt;とかそういう感じの名前でattributesを作って、そこに配列で指定必須のattributesを並べて書いておく。&lt;/p&gt;

&lt;p&gt;[sourcecode language=&amp;ldquo;javascript&amp;rdquo;]
{
  &amp;ldquo;name&amp;rdquo;: &amp;ldquo;nannchara-kannchara&amp;rdquo;,
  &amp;ldquo;default_attributes&amp;rdquo;: {
  },
  &amp;ldquo;json_class&amp;rdquo;: &amp;ldquo;Chef::Role&amp;rdquo;,
  &amp;ldquo;env_run_lists&amp;rdquo;: {
  },
  &amp;ldquo;run_list&amp;rdquo;: [
    &amp;ldquo;recipe[foo]&amp;ldquo;,
    &amp;ldquo;recipe[bar::baz]&amp;rdquo;
  ],
  &amp;ldquo;description&amp;rdquo;: &amp;ldquo;hogeraccho&amp;rdquo;,
  &amp;ldquo;chef_type&amp;rdquo;: &amp;ldquo;role&amp;rdquo;,
  &amp;ldquo;override_attributes&amp;rdquo;: {
      &amp;ldquo;&lt;strong&gt;required&lt;/strong&gt;&amp;ldquo;: [
        &amp;ldquo;test&amp;rdquo;,
        &amp;ldquo;test1&amp;rdquo;,
        &amp;ldquo;test2&amp;rdquo;
      ]
  }
}&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
んで knife role from file nannchara-kannchara.json すると、knife search コマンドで取り出せるようになるので、あとは適当に整形すれば一覧として取り出せる

[sourcecode language=&amp;quot;bash&amp;quot;]
$ knife search role -F json -q &amp;quot;name:nannchara-kannchara AND __required__:*&amp;quot; | tr -d &#39;\n&#39; | tr -d &#39; &#39; | grep -oE &amp;quot;required[^]]+&amp;quot; | awk -F[ &#39;{print $2}&#39; | tr &#39;,&#39; &#39;\n&#39; | tr -d &#39;&amp;quot;&#39;
test
test1
test2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;無理やり感があるがまぁ使えるのでよし。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ハサミを買ったら猛烈に感動したのでお前らもこれは体験するべき</title>
      <link>http://nobu666.com/2013/01/14/954.html</link>
      <pubDate>Mon, 14 Jan 2013 02:17:49 +0900</pubDate>
      
      <guid>http://nobu666.com/2013/01/14/954.html</guid>
      <description>&lt;p&gt;あけましておめでとうございます。&lt;/p&gt;

&lt;p&gt;突然ですけどハサミ買ったんですハサミ。そしたらこれがあまりにいままでのハサミの概念を打ち破る、画期的というか革命的というか、とにかくたかがハサミでおじさん猛烈に感動したのでブログを書く次第です。&lt;/p&gt;

&lt;p&gt;もとはというと、3匹飼ってる猫のうち、1匹の毛玉が猛烈にすごくて、何万円かするバリカン試してみたりしたんだけど、まったく歯が立たずに諦めてたんだけど、放っておくと良くないらしいし、かといって全身麻酔で剃ってもらうのもリスクがあるのでできるなら自分でどうにかしたいと思っていてですね。んで色々調べていると、とりあえず櫛で皮膚を切らないようにして、その上でハサミで縦に切込みを入れて少しづつほぐしていくのがいいという話を聞いて、試してみたんだけど猫の毛が柔らかすぎて、普通のハサミでは毛を巻き込んでしまってうまく切れず、どうしたもんかと思っていた所でこのハサミに出会ったということです。&lt;/p&gt;

&lt;iframe src=&#34;http://rcm-jp.amazon.co.jp/e/cm?t=realbeat-22&amp;o=9&amp;p=8&amp;l=as1&amp;asins=B0079WLDLW&amp;ref=qf_sp_asin_til&amp;fc1=000000&amp;IS2=1&amp;lt1=_blank&amp;m=amazon&amp;lc1=0000FF&amp;bc1=000000&amp;bg1=FFFFFF&amp;f=ifr&#34; style=&#34;width:120px;height:240px;&#34; scrolling=&#34;no&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;

&lt;p&gt;そのハサミというのがこれなんだけど、正直たかが文房具でこんなに感動するのはいつぶりか、というほどこれがすごくて。要は刃をカーブ形状にすることで、刃のどの部分をつかっても開く角度が一定になるように計算された形状になっており、どこで切っても最適な力加減でものを切ることができるという、気づいてしまえば至って単純なものであるのです。が、カーブくらいでなにを大げさなと思うじゃないですか。これがすごいのなんの!!!&lt;/p&gt;

&lt;p&gt;ハサミがこの世に生まれて何年経つのか知りませんけど、なぜ今までこうじゃなかったのかと思うに十分なすごさです。ハサミというものの概念を変える、革命的な商品であるといって過言ではないと思います。&lt;/p&gt;

&lt;p&gt;特に柔らかいものを切ろうとすると、普通刃先に絡まって切れなかったりするのがまったくなくて、スパっと切れるので感動する。この凄さをうまく言語化できなくてもどかしいくらい。ビニールとかダンボールとか、ニッチだと思うけど柔らかい猫の毛とか、驚くほどスムーズに切れるので買って損はないと自信を持って言える数少ない商品の一つだと思えます。しかももっと高いハサミも沢山あるなかで、これは1000円を切るお手頃価格である点もまた見逃せない。&lt;/p&gt;

&lt;iframe src=&#34;http://rcm-jp.amazon.co.jp/e/cm?t=realbeat-22&amp;o=9&amp;p=8&amp;l=as1&amp;asins=B00462MGOG&amp;ref=qf_sp_asin_til&amp;fc1=000000&amp;IS2=1&amp;lt1=_blank&amp;m=amazon&amp;lc1=0000FF&amp;bc1=000000&amp;bg1=FFFFFF&amp;f=ifr&#34; style=&#34;width:120px;height:240px;&#34; scrolling=&#34;no&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;

&lt;p&gt;消せるボールペンとか&lt;/p&gt;

&lt;iframe src=&#34;http://rcm-jp.amazon.co.jp/e/cm?t=realbeat-22&amp;o=9&amp;p=8&amp;l=as1&amp;asins=B003XOS4NU&amp;ref=qf_sp_asin_til&amp;fc1=000000&amp;IS2=1&amp;lt1=_blank&amp;m=amazon&amp;lc1=0000FF&amp;bc1=000000&amp;bg1=FFFFFF&amp;f=ifr&#34; style=&#34;width:120px;height:240px;&#34; scrolling=&#34;no&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;

&lt;p&gt;電動鼻毛カッターとか&lt;/p&gt;

&lt;p&gt;それ以来の感動的な商品です。たかがハサミ、されどハサミ。久しぶりにこんな安い値段で、心から買ってよかったと思えるものだったので勢いでブログ書きました。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SSH Port FowardでMySQLを使う</title>
      <link>http://nobu666.com/2012/01/19/931.html</link>
      <pubDate>Thu, 19 Jan 2012 12:49:13 +0900</pubDate>
      
      <guid>http://nobu666.com/2012/01/19/931.html</guid>
      <description>&lt;p&gt;気づいたら年が明けていますが俺は元気です。&lt;/p&gt;

&lt;p&gt;タイトル通りなんだけど、あるMySQLサーバへつなぐためには踏み台を通らないといけなくて、いちいち&lt;/p&gt;

&lt;p&gt;[sourcecode language=&amp;ldquo;bash&amp;rdquo; padlinenumbers=&amp;ldquo;2&amp;rdquo;]
localhost$ ssh -t gateway ssh dbserver
dbserver$ mysql -uhoge -p&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
とかやらないといけなくて、めんどい。というかこれだとローカルの開発環境で、一時的にdbserverで動作してるMySQLのデータを使いたいときとか困る。ダンプしてローカルに持ってくればいいけど、データがものすごいデカかったりしてだるい。どうにかしたい。

というわけで、Port Forwardすればいいじゃないかと思って

[sourcecode language=&amp;quot;bash&amp;quot; padlinenumbers=&amp;quot;2&amp;quot;]
$ ssh -Nf -L 13306:dbserver:3306 gateway
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;とかして、&lt;/p&gt;

&lt;p&gt;[sourcecode language=&amp;ldquo;text&amp;rdquo; padlinenumbers=&amp;ldquo;2&amp;rdquo;]
$ mysql -uhoge -p -P13306&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
これで勝つる！！！と思ったら、これでは繋がらない。でもtelnet localhost 13306とか叩いてみると繋がるように見える。

[sourcecode language=&amp;quot;text&amp;quot; padlinenumbers=&amp;quot;2&amp;quot;]
$ telnet localhost 13306
Trying 127.0.0.1...
Connected to localhost.
Escape character is &#39;^]&#39;.
L
5.5.8-log
         $;2)s.%n!
                  ?QV;dgXbeUZBymysql_native_password
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;なにこれどういうことなの、と思って色々試したり調べたりしていたら、答えは意外なところに。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://enginsite.com/tunnel_howto.htm&#34;&gt;What is SSH Port Forwarding and How It Works&lt;/a&gt;ってページに書いてあった。&lt;/p&gt;

&lt;blockquote&gt;When the remote SSH host is on a different machine than the MySQL server, replace 127.0.0.1 with the IP address of the MySQL server (relative to the SSH host). Never use &#34;localhost&#34; for hostname.&lt;/blockquote&gt;

&lt;p&gt;Never use “localhost” for hostname、だと……??&lt;/p&gt;

&lt;p&gt;[sourcecode language=&amp;ldquo;text&amp;rdquo; padlinenumbers=&amp;ldquo;2&amp;rdquo;]
$ mysql -uhoge -p -P13306 -h127.0.0.1
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 1058649
Server version: 5.5.8-log MySQL Community Server (GPL)&lt;/p&gt;

&lt;p&gt;Type &amp;lsquo;help;&amp;rsquo; or &amp;lsquo;\h&amp;rsquo; for help. Type &amp;lsquo;\c&amp;rsquo; to clear the current input statement.&lt;/p&gt;

&lt;p&gt;mysql&amp;gt;
```&lt;/p&gt;

&lt;p&gt;をををを……そして&lt;a href=&#34;http://d.hatena.ne.jp/yamamucho/20110319/1300511690&#34;&gt;SSH ポートフォワードで MySQL サーバにログインするときのメモ - 酔いどれコード&lt;/a&gt; に同じことが書いてあった。damn。localhost指定(-hオプションなしのデフォルト)だと、Unixドメインソケットを使って通信するので、当然ネットワーク越しには繋がらないよというオチでした。2時間くらいハマってしまったのでメモ。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ターミナル勉強会で話してきました</title>
      <link>http://nobu666.com/2011/09/13/927.html</link>
      <pubDate>Tue, 13 Sep 2011 01:40:58 +0900</pubDate>
      
      <guid>http://nobu666.com/2011/09/13/927.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://kokucheese.com/event/index/16461/&#34;&gt;http://kokucheese.com/event/index/16461/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;一時はどうなることかと思いましたが、@Mr_K_O の活躍により無事LT枠も埋まり、盛況のうちに終わりました。関係者の方々、来てくださった方々ありがとうございました。&lt;/p&gt;

&lt;p&gt;資料はこちらにおいてあります。
&lt;a href=&#34;http://www.slideshare.net/NobutoshiOgata/zsh-9223115&#34;&gt;http://www.slideshare.net/NobutoshiOgata/zsh-9223115&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;思いの外30分はあっという間に過ぎてしまうもので、幾つか言い足りなかったこともあったのでここに補足させて頂きます。&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;typoの話: ありがちなtypoをaliasでカバー&lt;/li&gt;
    &lt;li&gt;ヒストリ共有の話: プロセス間でヒストリを共有するオプションがあります、便利＞＜&lt;/li&gt;
    &lt;li&gt;hint: あえて無意味なコマンドを入れることで、ヒストリを検索するときに楽をする技: C-rで検索するときに一発で見つかるように、echo &#34;hint&#34;&gt;/dev/null;hogehoge みたいにしとく…ってこれzshとか関係ないですが&lt;/li&gt;
    &lt;li&gt;wgetでパラメタ指定すると悲しい話: ?がglobで展開されちゃうので面倒なんですが、autoload -Uz url-quote-magic;zle -N self-insert url-quote-magicしとくと幸せだよ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;まぁ言い出すときりがないのでこのへんにしときます。次回は是非、dotfile晒し大会的なことをやりたいですね。&lt;/p&gt;

&lt;p&gt;さっそくまとめてくださった方が。ありがとうございます！ &lt;a href=&#34;http://d.hatena.ne.jp/cointoss1973/20110912/1315840029&#34;&gt;http://d.hatena.ne.jp/cointoss1973/20110912/1315840029&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>